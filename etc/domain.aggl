spacePattern=3
lineThickness=2
fontName=Arial
name=domain
vertexDiameter=40
shortPattern=1
nodeThickness=2
fontSize=12
longPattern=3
===
changeRoom : active(1)
{
	{
		s2:roomSt(25,75)
		s1:roomSt(-200,75)
		r1:object(-200,-35)
		r2:object(25,-35)
		robot:robot(-95,-145)
		robot->r1(in)
		r1->r2(transitable)
		r1->s1(room)
		r2->s2(room)
	}
	=>
	{
		s2:roomSt(25,75)
		s1:roomSt(-200,75)
		r1:object(-200,-35)
		r2:object(25,-35)
		robot:robot(-95,-145)
		robot->r2(in)
		r1->r2(transitable)
		r1->s1(room)
		r2->s2(room)
	}
	effect
	{
		(forall
			something:object
			(when
				(in something robot)
				(and
					(not (in something s1))
					(in something s2)
				)
			)
		)
	}
}

findObjectVisually : active(1)
{
	{
		roomst:roomSt(10,0)
		robot:robot(-315,0)
		room:object(-180,0)
		room->roomst(explored)*
		room->roomst(room)
		robot->room(in)
	}
	=>
	{
		status:objectSt(95,0)
		roomst:roomSt(95,110)
		object:object(-130,0)
		room:object(-130,110)
		robot:robot(-305,0)
		robot->object(know)
		object->status(see)
		object->status(unclassified)
		object->status(noReach)
		object->status(position)
		object->status(reachable)
		object->status(hasStatus)
		object->room(in)
		room->roomst(explored)*
		room->roomst(room)
		robot->room(in)
	}
}

findObjectTold : active(4)
{
	{
		robot:robot(-300,0)
	}
	=>
	{
		status:objectSt(95,0)
		object:object(-130,0)
		container:object(-130,110)
		robot:robot(-305,0)
		robot->object(know)
		object->status(noSee)
		object->status(unclassified)
		object->status(noReach)
		object->status(noPosition)
		object->status(reachable)
		object->status(hasStatus)
		object->container(in)
	}
	effect
	{
		(forall
			something:object
			(when
				(in container something)
				(in object something)
			)
		)
	}
}

findGranny : active(2)
{
	{
		person:person(-15,-75)
		roomSt:roomSt(200,50)
		robot:robot(-190,-75)
		personSt:personSt(200,-75)
		room:object(-15,50)
		robot->person(know)
		person->personSt(granny)
		person->personSt(noLocalized)
		robot->room(in)
		room->roomSt(room)
		room->roomSt(noExplored)
	}
	=>
	{
		person:person(-15,-75)
		roomSt:roomSt(200,55)
		robot:robot(-190,-75)
		personSt:personSt(200,-75)
		room:object(-15,55)
		robot->person(know)
		person->personSt(granny)
		person->room(in)
		person->personSt(localized)
		robot->room(in)
		room->roomSt(room)
		room->roomSt(noExplored)
	}
	effect
	{
		(forall
			aRoom:object
			aRoomSt:roomSt
			(and
				(not (explored aRoom aRoomSt))
				(noExplored aRoom aRoomSt)
			)
		)
	}
}

recognizeObjMug : active(1)
{
	{
		status:objectSt(65,-75)
		object:object(-130,-75)
		robot:robot(-290,-75)
		robot->object(know)
		object->status(hasStatus)
		object->status(see)
		object->status(position)
		object->status(unclassified)
	}
	=>
	{
		status:objectSt(60,-75)
		object:object(-130,-75)
		robot:robot(-290,-75)
		robot->object(know)
		object->status(hasStatus)
		object->status(see)
		object->status(position)
		object->status(classified)
		object->status(mug)
	}
}

recognizeObjGlasses : active(1)
{
	{
		status:objectSt(65,-75)
		object:object(-130,-75)
		robot:robot(-290,-75)
		robot->object(know)
		object->status(hasStatus)
		object->status(see)
		object->status(position)
		object->status(unclassified)
	}
	=>
	{
		status:objectSt(60,-75)
		object:object(-130,-75)
		robot:robot(-290,-75)
		robot->object(know)
		object->status(hasStatus)
		object->status(see)
		object->status(position)
		object->status(classified)
		object->status(glasses)
	}
}

recognizeObjTable : active(1)
{
	{
		status:objectSt(65,-75)
		object:object(-130,-75)
		robot:robot(-290,-75)
		robot->object(know)
		object->status(hasStatus)
		object->status(see)
		object->status(position)
		object->status(unclassified)
	}
	=>
	{
		status:objectSt(60,-75)
		object:object(-130,-75)
		robot:robot(-290,-75)
		robot->object(know)
		object->status(hasStatus)
		object->status(see)
		object->status(position)
		object->status(classified)
		object->status(table)
	}
}

recognizeObjCoffeePot : active(1)
{
	{
		status:objectSt(65,-75)
		object:object(-130,-75)
		robot:robot(-290,-75)
		robot->object(know)
		object->status(hasStatus)
		object->status(see)
		object->status(position)
		object->status(unclassified)
	}
	=>
	{
		status:objectSt(60,-75)
		object:object(-130,-75)
		robot:robot(-290,-75)
		robot->object(know)
		object->status(hasStatus)
		object->status(see)
		object->status(position)
		object->status(classified)
		object->status(coffeepot)
	}
}

recognizeObjFails : active(1)
{
	{
		status:objectSt(105,-80)
		object:object(-135,-80)
		robot:robot(-290,-80)
		robot->object(know)
		object->status(hasStatus)
		object->status(see)
		object->status(position)
		object->status(unclassified)
	}
	=>
	{
		status:objectSt(95,-75)
		object:object(-130,-75)
		robot:robot(-295,-75)
		robot->object(know)
		object->status(hasStatus)
		object->status(see)
		object->status(position)
		object->status(classifailed)
	}
}

setRoomExplored : passive(1)
{
	{
		status:roomSt(250,0)
		object:object(0,0)
		object->status(noExplored)
	}
	=>
	{
		status:roomSt(250,0)
		object:object(0,0)
		object->status(explored)
	}
}

setRoomNotExplored : passive(1)
{
	{
		status:roomSt(250,0)
		object:object(0,0)
		object->status(explored)
	}
	=>
	{
		status:roomSt(250,0)
		object:object(0,0)
		object->status(noExplored)
	}
}

setObjectReach : active(1)
{
	{
		status:objectSt(250,0)
		object:object(65,0)
		container:object(-70,0)
		robot:object(-205,0)
		object->status(hasStatus)
		object->status(noReach)
		object->status(reachable)
		object->container(in)
		robot->container(in)
	}
	=>
	{
		status:objectSt(250,0)
		object:object(65,0)
		container:object(-70,0)
		robot:object(-205,0)
		object->status(hasStatus)
		object->status(reach)
		object->status(reachable)
		object->container(in)
		robot->container(in)
	}
}

setObjectNotReach : passive(1)
{
	{
		status:objectSt(250,-40)
		object:object(50,-40)
		object->status(hasStatus)
		object->status(reach)
	}
	=>
	{
		status:objectSt(250,-40)
		object:object(50,-40)
		object->status(hasStatus)
		object->status(noReach)
	}
}

setObjectReachable : passive(1)
{
	{
		status:objectSt(250,-40)
		object:object(35,-40)
		object->status(hasStatus)
		object->status(noReachable)
	}
	=>
	{
		status:objectSt(250,-40)
		object:object(55,-40)
		object->status(hasStatus)
		object->status(reachable)
	}
}

setObjectNotReachable : passive(1)
{
	{
		status:objectSt(285,-40)
		object:object(80,-40)
		object->status(hasStatus)
		object->status(reachable)
	}
	=>
	{
		status:objectSt(250,-40)
		object:object(35,-45)
		object->status(hasStatus)
		object->status(noReachable)
	}
}

graspObject : active(1)
{
	{
		status:objectSt(300,0)
		table:object(0,110)
		object:object(130,0)
		robot:robot(0,-110)
		room:object(-130,0)
		object->status(reach)
		robot->object(know)
		object->table(in)
		robot->room(in)
		table->room(in)
	}
	=>
	{
		status:objectSt(300,0)
		table:object(0,110)
		object:object(130,0)
		robot:robot(0,-110)
		room:object(-130,0)
		object->status(reach)
		robot->object(know)
		object->robot(in)
		robot->room(in)
		table->room(in)
	}
}

deliverObject : active(1)
{
	{
		person:person(0,115)
		object:object(160,0)
		room:object(-160,0)
		robot:robot(0,-115)
		robot->object(know)
		object->robot(in)
		robot->room(in)
		person->room(in)
	}
	=>
	{
		person:person(0,115)
		object:object(160,0)
		room:object(-160,0)
		robot:robot(0,-115)
		robot->object(know)
		object->person(in)
		robot->room(in)
		person->room(in)
	}
}

handObject : passive(1)
{
	{
		status:objectSt(250,0)
		object:object(0,0)
		object->status(reach)
	}
	=>
	{
		status:objectSt(250,0)
		object:object(0,0)
		object->status(noReach)
	}
}

leaveObjectTable : passive(1)
{
	{
		status:objectSt(250,0)
		object:object(0,0)
		object->status(reach)
	}
	=>
	{
		status:objectSt(250,0)
		object:object(0,0)
		object->status(noReach)
	}
}

setObjectSee : active(1)
{
	{
		status:objectSt(250,-40)
		object:object(80,-40)
		object->status(hasStatus)
		object->status(noSee)
	}
	=>
	{
		status:objectSt(250,-40)
		object:object(80,-40)
		object->status(hasStatus)
		object->status(see)
	}
}

setObjectNotSee : passive(1)
{
	{
		status:objectSt(250,-40)
		object:object(80,-40)
		object->status(hasStatus)
		object->status(see)
	}
	=>
	{
		status:objectSt(250,-40)
		object:object(80,-40)
		object->status(hasStatus)
		object->status(noSee)
	}
}

setObjectPosition : active(1)
{
	{
		status:objectSt(250,-40)
		object:object(80,-40)
		object->status(hasStatus)
		object->status(noPosition)
	}
	=>
	{
		status:objectSt(250,-40)
		object:object(80,-40)
		object->status(hasStatus)
		object->status(position)
	}
}

setObjectNotPosition : passive(1)
{
	{
		status:objectSt(250,-40)
		object:object(80,-40)
		object->status(hasStatus)
		object->status(position)
	}
	=>
	{
		status:objectSt(250,-40)
		object:object(80,-40)
		object->status(hasStatus)
		object->status(noPosition)
	}
}

robotMovesObjectFromContainer : active(1)
{
	{
		c2s:objectSt(-215,-45)
		object:object(-390,-175)
		robot:robot(-625,-175)
		c1s:objectSt(-215,-305)
		c2:object(-390,-45)
		c1:object(-390,-305)
		os:objectSt(-215,-175)
		robot->object(know)
		robot->c2(know)
		robot->c1(know)
		object->c1(in)
		c1->c1s(reach)
		object->os(reach)
		c2->c2s(reach)
	}
	=>
	{
		c2s:objectSt(-215,-45)
		object:object(-390,-175)
		robot:robot(-625,-175)
		c1s:objectSt(-215,-305)
		c2:object(-390,-45)
		c1:object(-390,-305)
		os:objectSt(-215,-175)
		robot->object(know)
		robot->c2(know)
		robot->c1(know)
		object->c2(in)
		c1->c1s(reach)
		object->os(reach)
		c2->c2s(reach)
	}
}

tellHumanAboutMug : active(1)
{
	{
		statusr:objectSt(-425,55)
		robot:robot(-295,-135)
		person:person(45,-135)
		objectr:object(-235,-30)
		cont1:object(-180,125)
		cont2:object(-45,120)
		robot->objectr(know)
		robot->person(interacting)
		objectr->statusr(hasStatus)
		objectr->cont1(in)
		cont1->cont2(eq)
		objectr->statusr(position)
		objectr->statusr(classified)
		objectr->statusr(mug)
	}
	=>
	{
		statusr:objectSt(-445,70)
		objecth:object(0,-10)
		robot:robot(-295,-135)
		person:person(45,-135)
		objectr:object(-235,-10)
		cont1:object(-185,175)
		cont2:object(-45,175)
		statush:objectSt(205,85)
		robot->objectr(know)
		robot->person(interacting)
		objectr->statusr(hasStatus)
		person->objecth(know)
		objecth->statush(hasStatus)
		objectr->objecth(eq)
		objecth->cont2(in)
		objectr->statusr(position)
		objectr->statusr(classified)
		objectr->statusr(mug)
		objecth->statush(position)
		objecth->statush(classified)
		objecth->statush(mug)
		objecth->statush(see)
		objecth->statush(reach)
		objecth->statush(reachable)
		objectr->cont1(in)
		cont1->cont2(eq)
	}
}

tellHumanAboutCoffeePot : active(1)
{
	{
		statusr:objectSt(-425,55)
		robot:robot(-295,-135)
		person:person(45,-135)
		objectr:object(-235,-30)
		cont1:object(-180,125)
		cont2:object(-45,120)
		robot->objectr(know)
		robot->person(interacting)
		objectr->statusr(hasStatus)
		objectr->cont1(in)
		cont1->cont2(eq)
		objectr->statusr(position)
		objectr->statusr(classified)
		objectr->statusr(coffeepot)
	}
	=>
	{
		statusr:objectSt(-445,70)
		objecth:object(0,-10)
		robot:robot(-295,-135)
		person:person(45,-135)
		objectr:object(-235,-10)
		cont1:object(-185,175)
		cont2:object(-45,175)
		statush:objectSt(205,85)
		robot->objectr(know)
		robot->person(interacting)
		objectr->statusr(hasStatus)
		person->objecth(know)
		objecth->statush(hasStatus)
		objectr->objecth(eq)
		objecth->cont2(in)
		objectr->statusr(position)
		objectr->statusr(classified)
		objectr->statusr(coffeepot)
		objecth->statush(position)
		objecth->statush(classified)
		objecth->statush(coffeepot)
		objecth->statush(see)
		objecth->statush(reach)
		objecth->statush(reachable)
		objectr->cont1(in)
		cont1->cont2(eq)
	}
}

tellHumanAboutTable : active(1)
{
	{
		statusr:objectSt(-425,55)
		robot:robot(-295,-135)
		person:person(45,-135)
		objectr:object(-235,-30)
		cont1:object(-180,125)
		cont2:object(-45,120)
		robot->objectr(know)
		robot->person(interacting)
		objectr->statusr(hasStatus)
		objectr->cont1(in)
		cont1->cont2(eq)
		objectr->statusr(position)
		objectr->statusr(classified)
		objectr->statusr(table)
	}
	=>
	{
		statusr:objectSt(-445,70)
		objecth:object(0,-10)
		robot:robot(-295,-135)
		person:person(45,-135)
		objectr:object(-235,-10)
		cont1:object(-185,175)
		cont2:object(-45,175)
		statush:objectSt(205,85)
		robot->objectr(know)
		robot->person(interacting)
		objectr->statusr(hasStatus)
		person->objecth(know)
		objecth->statush(hasStatus)
		objectr->objecth(eq)
		objecth->cont2(in)
		objectr->statusr(position)
		objectr->statusr(classified)
		objectr->statusr(table)
		objecth->statush(position)
		objecth->statush(classified)
		objecth->statush(table)
		objecth->statush(see)
		objecth->statush(reach)
		objecth->statush(reachable)
		objectr->cont1(in)
		cont1->cont2(eq)
	}
}

tellHumanAboutUnknownObject : active(1)
{
	{
		person:person(-90,-135)
		objectr:object(-295,-25)
		robot:robot(-295,-135)
		statusr:objectSt(-490,-25)
		robot->objectr(know)
		robot->person(interacting)
		objectr->statusr(hasStatus)
		objectr->statusr(classifailed)
		objectr->statusr(position)
	}
	=>
	{
		statusr:objectSt(-490,-25)
		objecth:object(-100,-25)
		robot:robot(-295,-135)
		person:person(-100,-135)
		objectr:object(-295,-25)
		statush:objectSt(100,-25)
		robot->objectr(know)
		robot->person(interacting)
		objectr->statusr(hasStatus)
		person->objecth(know)
		objecth->statush(hasStatus)
		objectr->objecth(eq)
		objectr->statusr(classifailed)
		objectr->statusr(position)
		objecth->statush(unclassified)
		objecth->statush(position)
		objecth->statush(reachable)
	}
}

makeHumanLook : active(2)
{
	{
		statusr:objectSt(-90,180)
		objecth:object(150,40)
		robot:robot(-90,-75)
		person:person(155,-75)
		objectr:object(-90,40)
		statush:objectSt(145,180)
		objectr->objecth(eq)
		robot->person(interacting)
		robot->objectr(know)
		person->objecth(know)
		objectr->statusr(position)
		objectr->statusr(see)
		objecth->statush(noSee)
		objecth->statush(position)
	}
	=>
	{
		statusr:objectSt(-90,180)
		objecth:object(150,40)
		robot:robot(-90,-75)
		person:person(155,-75)
		objectr:object(-90,40)
		statush:objectSt(145,180)
		objectr->objecth(eq)
		robot->person(interacting)
		robot->objectr(know)
		person->objecth(know)
		objectr->statusr(position)
		objectr->statusr(see)
		objecth->statush(see)
		objecth->statush(position)
	}
}

personClassifiesMug : active(2)
{
	{
		objecth:object(100,35)
		robot:robot(-100,-75)
		person:person(100,-75)
		objectr:object(-100,35)
		cont2:object(100,140)
		statush:objectSt(300,35)
		objectr->objecth(eq)
		robot->person(interacting)
		robot->objectr(know)
		person->objecth(know)
		objecth->statush(hasStatus)
		objecth->statush(unclassified)
		objecth->statush(see)
		objecth->statush(position)
	}
	=>
	{
		objecth:object(100,35)
		robot:robot(-100,-75)
		person:person(100,-75)
		objectr:object(-100,35)
		cont2:object(100,140)
		statush:objectSt(300,35)
		objectr->objecth(eq)
		robot->person(interacting)
		robot->objectr(know)
		person->objecth(know)
		objecth->statush(hasStatus)
		objecth->statush(mug)
		objecth->statush(see)
		objecth->statush(position)
		objecth->cont2(in)
	}
}

personClassifiesTable : active(2)
{
	{
		objecth:object(100,35)
		robot:robot(-100,-75)
		person:person(100,-75)
		objectr:object(-100,35)
		cont2:object(100,140)
		statush:objectSt(300,35)
		objectr->objecth(eq)
		robot->person(interacting)
		robot->objectr(know)
		person->objecth(know)
		objecth->statush(hasStatus)
		objecth->statush(unclassified)
		objecth->statush(see)
		objecth->statush(position)
	}
	=>
	{
		objecth:object(100,35)
		robot:robot(-100,-75)
		person:person(100,-75)
		objectr:object(-100,35)
		cont2:object(100,140)
		statush:objectSt(300,35)
		objectr->objecth(eq)
		robot->person(interacting)
		robot->objectr(know)
		person->objecth(know)
		objecth->statush(hasStatus)
		objecth->statush(table)
		objecth->statush(see)
		objecth->statush(position)
		objecth->cont2(in)
	}
}

personClassifiesMilkPot : active(1)
{
	{
		objecth:object(100,35)
		person:person(100,-75)
		objectr:object(-100,35)
		robot:robot(-100,-75)
		statush:objectSt(300,35)
		objectr->objecth(eq)
		robot->person(interacting)
		robot->objectr(know)
		person->objecth(know)
		objecth->statush(hasStatus)
		objecth->statush(unclassified)
	}
	=>
	{
		objecth:object(100,35)
		person:person(100,-75)
		objectr:object(-100,35)
		robot:robot(-100,-75)
		statush:objectSt(300,35)
		objectr->objecth(eq)
		robot->person(interacting)
		robot->objectr(know)
		person->objecth(know)
		objecth->statush(hasStatus)
		objecth->statush(milkpot)
	}
}

personTellsUsAboutMug : active(1)
{
	{
		statusr:objectSt(-285,135)
		objecth:object(100,35)
		robot:robot(-100,-75)
		person:person(100,-75)
		objectr:object(-100,35)
		statush:objectSt(285,135)
		objectr->objecth(eq)
		robot->person(interacting)
		robot->objectr(know)
		person->objecth(know)
		objectr->statusr(hasStatus)
		objecth->statush(hasStatus)
		objectr->statusr(classifailed)
		objecth->statush(classified)
		objecth->statush(mug)
	}
	=>
	{
		statusr:objectSt(-285,135)
		objecth:object(100,35)
		robot:robot(-100,-75)
		person:person(100,-75)
		objectr:object(-100,35)
		statush:objectSt(285,135)
		objectr->objecth(eq)
		robot->person(interacting)
		robot->objectr(know)
		person->objecth(know)
		objectr->statusr(hasStatus)
		objecth->statush(hasStatus)
		objectr->statusr(classified)
		objecth->statush(classified)
		objecth->statush(mug)
		objectr->statusr(mug)
	}
}

personTellsUsAboutMilkPot : active(1)
{
	{
		statusr:objectSt(-285,135)
		objecth:object(100,35)
		robot:robot(-100,-75)
		person:person(100,-75)
		objectr:object(-100,35)
		statush:objectSt(285,135)
		objectr->objecth(eq)
		robot->person(interacting)
		robot->objectr(know)
		person->objecth(know)
		objectr->statusr(hasStatus)
		objecth->statush(hasStatus)
		objectr->statusr(classifailed)
		objecth->statush(classified)
		objecth->statush(milkpot)
	}
	=>
	{
		statusr:objectSt(-285,135)
		objecth:object(100,35)
		robot:robot(-100,-75)
		person:person(100,-75)
		objectr:object(-100,35)
		statush:objectSt(285,135)
		objectr->objecth(eq)
		robot->person(interacting)
		robot->objectr(know)
		person->objecth(know)
		objectr->statusr(hasStatus)
		objecth->statush(hasStatus)
		objectr->statusr(classified)
		objecth->statush(classified)
		objecth->statush(milkpot)
		objectr->statusr(milkpot)
	}
}

personTellsUsAboutTable : active(3)
{
	{
		statusr:objectSt(-285,135)
		objecth:object(100,35)
		robot:robot(-100,-75)
		person:person(100,-75)
		objectr:object(-100,35)
		statush:objectSt(285,135)
		objectr->objecth(eq)
		robot->person(interacting)
		robot->objectr(know)
		person->objecth(know)
		objectr->statusr(hasStatus)
		objecth->statush(hasStatus)
		objectr->statusr(classifailed)
		objecth->statush(classified)
		objecth->statush(table)
	}
	=>
	{
		statusr:objectSt(-285,135)
		objecth:object(100,35)
		robot:robot(-100,-75)
		person:person(100,-75)
		objectr:object(-100,35)
		statush:objectSt(285,135)
		objectr->objecth(eq)
		robot->person(interacting)
		robot->objectr(know)
		person->objecth(know)
		objectr->statusr(hasStatus)
		objecth->statush(hasStatus)
		objectr->statusr(classified)
		objecth->statush(classified)
		objecth->statush(table)
		objectr->statusr(table)
	}
}

findGrannyAndDeliver : active(1)
{
	findGranny as find
	deliverObject as deliver
	where:
	deliver.robot = find.robot
	deliver.room = find.room
	deliver.person = find.person
}


reachAndGrasp : active(1)
{
	setObjectReach as reach
	graspObject as grasp
	where:
	reach.object = grasp.object
	reach.status = grasp.status
}


findMilk : active(1)
{
	findObjectVisually as find
	recognizeObjFails as fail
	tellHumanAboutUnknownObject as tell
	personClassifiesMilkPot as milkh
	personTellsUsAboutMilkPot as milkr
	where:
	find.status = fail.status = tell.statusr = milkr.statusr
	find.object = fail.object = tell.objectr = milkh.objectr = milkr.objectr
	find.robot = fail.robot = tell.robot = milkh.robot = milkr.robot
	tell.person = milkh.person = milkr.person
	tell.objecth = milkh.objecth = milkr.statush
	tell.statush = milkh.statush = milkr.statush
}


