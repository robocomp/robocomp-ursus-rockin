spacePattern=3
lineThickness=2
fontName=Arial
name=domain
vertexDiameter=40
shortPattern=1
nodeThickness=2
fontSize=14
longPattern=3
===
changeRoom : active(1)
{
	{
		r1:room(-200,-35)
		r2:room(25,-35)
		robot:robot(-95,-145)
		robot->r1(in)
		r1->r2(connected)
	}
	=>
	{
		r1:room(-200,-50)
		r2:room(0,-45)
		robot:robot(-120,-175)
		robot->r2(in)
		r1->r2(connected)
	}
}

findObjectVisually : active(1)
{
	{
		robot:robot(-300,-140)
	}
	=>
	{
		status:objectSt(200,-75)
		object:object(-15,-75)
		robot:robot(-180,-75)
		robot->object(know)
		object->status(see)
		object->status(noClass)
		object->status(noReach)
		object->status(pose)
	}
}

findGranny : active(2)
{
	{
		status:personSt(200,-75)
		person:person(-15,-75)
		roomSt:roomSt(200,50)
		r:robot(-190,-75)
		room:room(-15,50)
		r->person(know)
		person->status(granny)
		person->status(noLocalized)
		r->room(in)
		room->roomSt(noExplored)
	}
	=>
	{
		status:personSt(200,-75)
		person:person(-15,-75)
		roomSt:roomSt(200,55)
		r:robot(-190,-75)
		room:room(-15,55)
		r->person(know)
		person->status(granny)
		person->room(in)
		person->status(localized)
		r->room(in)
		room->roomSt(noExplored)
	}
	effect
	{
		(forall
			aRoom:room
			aRoomSt:roomSt
			(and
				(not (explored aRoom aRoomSt))
				(noExplored aRoom aRoomSt)
			)
		)
	}
}

recognizeObjMug : active(1)
{
	{
		s:objectSt(200,-75)
		r:robot(-180,-75)
		other:table(-15,30)
		o:object(-15,-75)
		r->o(know)
		o->s(see)
		o->s(noClass)
		o->s(pose)
	}
	=>
	{
		s:objectSt(155,-75)
		r:robot(-180,-75)
		other:table(-15,30)
		o:object(-15,-75)
		r->o(know)
		o->other(in)
		o->s(see)
		o->s(class)
		o->s(pose)
		o->s(mug)
	}
}

recognizeObjGlasses : active(1)
{
	{
		s:objectSt(200,-75)
		r:robot(-180,-75)
		other:table(-15,30)
		o:object(-15,-75)
		r->o(know)
		o->s(see)
		o->s(noClass)
		o->s(pose)
	}
	=>
	{
		s:objectSt(155,-75)
		r:robot(-180,-75)
		other:table(-15,30)
		o:object(-15,-75)
		r->o(know)
		o->other(in)
		o->s(see)
		o->s(class)
		o->s(pose)
		o->s(glasses)
	}
}

recognizeObjTable : active(1)
{
	{
		s:objectSt(200,-75)
		r:robot(-180,-75)
		other:room(-15,30)
		o:object(-15,-75)
		r->o(know)
		o->s(see)
		o->s(noClass)
		o->s(pose)
	}
	=>
	{
		s:objectSt(155,-75)
		r:robot(-180,-75)
		other:room(-15,30)
		o:object(-15,-75)
		r->o(know)
		o->other(in)
		o->s(see)
		o->s(class)
		o->s(pose)
		o->s(table)
	}
}

setRoomExplored : passive(1)
{
	{
		s:roomSt(250,0)
		o:room(0,0)
		o->s(noExplored)
	}
	=>
	{
		s:roomSt(250,0)
		o:room(0,0)
		o->s(explored)
	}
}

setRoomNotExplored : passive(1)
{
	{
		s:roomSt(250,0)
		o:room(0,0)
		o->s(explored)
	}
	=>
	{
		s:roomSt(250,0)
		o:room(0,0)
		o->s(noExplored)
	}
}

setObjectReach : active(1)
{
	{
		s:objectSt(250,0)
		o:object(0,0)
		o->s(noReach)
	}
	=>
	{
		s:objectSt(250,0)
		o:object(0,0)
		o->s(reach)
	}
}

setObjectNotReach : passive(1)
{
	{
		s:objectSt(250,0)
		o:object(0,0)
		o->s(reach)
	}
	=>
	{
		s:objectSt(250,0)
		o:object(0,0)
		o->s(noReach)
	}
}

graspObject : active(1)
{
	{
		s:objectSt(280,0)
		r:robot(5,-110)
		room:room(-220,-5)
		o:object(95,0)
		t:object(-5,115)
		o->s(reach)
		r->o(know)
		o->t(in)
		r->room(in)
		t->room(in)
	}
	=>
	{
		s:objectSt(320,0)
		r:robot(-5,-120)
		room:room(-145,-15)
		o:object(120,-20)
		t:object(5,105)
		o->s(reach)
		r->o(know)
		o->r(in)
		r->room(in)
		t->room(in)
	}
}

deliverObject : active(1)
{
	{
		room:room(-160,0)
		p:person(0,115)
		o:object(160,0)
		r:robot(0,-115)
		r->o(know)
		o->r(in)
		r->room(in)
		p->room(in)
	}
	=>
	{
		room:room(-160,0)
		p:person(0,115)
		o:object(160,0)
		r:robot(0,-115)
		r->o(know)
		o->p(in)
		r->room(in)
		p->room(in)
	}
}

handObject : passive(1)
{
	{
		s:objectSt(250,0)
		o:object(0,0)
		o->s(reach)
	}
	=>
	{
		s:objectSt(250,0)
		o:object(0,0)
		o->s(noReach)
	}
}

leaveObjectTable : passive(1)
{
	{
		s:objectSt(250,0)
		o:object(0,0)
		o->s(reach)
	}
	=>
	{
		s:objectSt(250,0)
		o:object(0,0)
		o->s(noReach)
	}
}

setObjectSee : active(1)
{
	{
		s:objectSt(250,0)
		o:object(0,0)
		o->s(noSee)
	}
	=>
	{
		s:objectSt(250,0)
		o:object(0,0)
		o->s(see)
	}
}

setObjectNotSee : passive(1)
{
	{
		s:objectSt(250,0)
		o:object(0,0)
		o->s(see)
	}
	=>
	{
		s:objectSt(250,0)
		o:object(0,0)
		o->s(noSee)
	}
}

setObjectPosition : active(1)
{
	{
		s:objectSt(250,0)
		o:object(0,0)
		o->s(noPose)
	}
	=>
	{
		s:objectSt(250,0)
		o:object(0,0)
		o->s(pose)
	}
}

setObjectNotPosition : passive(1)
{
	{
		s:objectSt(250,0)
		o:object(0,0)
		o->s(pose)
	}
	=>
	{
		s:objectSt(250,0)
		o:object(0,0)
		o->s(noPose)
	}
}

robotMovesObjectFromContainer : active(1)
{
	{
		c2s:objectSt(-215,-45)
		o:object(-425,-175)
		r:robot(-625,-175)
		c1s:objectSt(-215,-305)
		c2:object(-385,-45)
		c1:object(-390,-305)
		os:objectSt(-215,-175)
		r->o(know)
		r->c2(know)
		r->c1(know)
		o->c1(in)
		c1->c1s(reach)
		c1->c1s(table)
		o->os(reach)
		o->os(mug)
		c2->c2s(reach)
		c2->c2s(box)
	}
	=>
	{
		c2s:objectSt(-215,-45)
		o:object(-425,-175)
		r:robot(-625,-175)
		c1s:objectSt(-215,-305)
		c2:object(-385,-45)
		c1:object(-390,-305)
		os:objectSt(-215,-175)
		r->o(know)
		r->c2(know)
		r->c1(know)
		o->c2(in)
		c1->c1s(reach)
		c1->c1s(table)
		o->os(reach)
		o->os(mug)
		c2->c2s(reach)
		c2->c2s(box)
	}
}

findGrannyAndDeliver : active(1)
{
	findGranny as find
	deliverObject as deliver
	where:
	deliver.r = find.r
	deliver.room = find.room
	deliver.p = find.person
}

reachAndGrasp : active(1)
{
	setObjectReach as reach
	graspObject as grasp
	where:
	reach.o = grasp.o
	reach.s = grasp.s
}

